import getSelectionMarks from './getSelectionMarks';
export const isLinkActive = (state) => {
    const { schema, selection: { anchor, head, from, to } } = state;
    if (!schema.marks.link) {
        return false;
    }
    const isForwardSelection = anchor === from;
    const linkMarks = getSelectionMarks(state).filter(mark => mark.type === schema.marks.link);
    if (!linkMarks.length) {
        return false;
    }
    const selectionHasOnlyMarks = isForwardSelection ?
        (state.doc.rangeHasMark(anchor, anchor + 1, schema.marks.link) &&
            state.doc.rangeHasMark(head - 1, head, schema.marks.link)) : (state.doc.rangeHasMark(anchor - 1, anchor, schema.marks.link) &&
        state.doc.rangeHasMark(head, head + 1, schema.marks.link));
    if (linkMarks.length === 1 && selectionHasOnlyMarks) {
        return true;
    }
    return false;
};
export default isLinkActive;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNMaW5rQWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vbmd4LWVkaXRvci9oZWxwZXJzL2lzTGlua0FjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLGlCQUFpQixNQUFNLHFCQUFxQixDQUFDO0FBRXBELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxDQUFDLEtBQWtCLEVBQVcsRUFBRTtJQUMxRCxNQUFNLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsS0FBSyxDQUFDO0lBRWhFLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRTtRQUN0QixPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsTUFBTSxrQkFBa0IsR0FBRyxNQUFNLEtBQUssSUFBSSxDQUFDO0lBQzNDLE1BQU0sU0FBUyxHQUFXLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVuRyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRTtRQUNyQixPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsTUFBTSxxQkFBcUIsR0FBRyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ2hELENBQ0UsS0FBSyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLE1BQU0sR0FBRyxDQUFDLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7WUFDN0QsS0FBSyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsSUFBSSxHQUFHLENBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FDMUQsQ0FBQyxDQUFDLENBQUMsQ0FDRixLQUFLLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUM3RCxLQUFLLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxHQUFHLENBQUMsRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUMxRCxDQUFDO0lBRUosSUFBSSxTQUFTLENBQUMsTUFBTSxLQUFLLENBQUMsSUFBSSxxQkFBcUIsRUFBRTtRQUNuRCxPQUFPLElBQUksQ0FBQztLQUNiO0lBRUQsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDLENBQUM7QUFFRixlQUFlLFlBQVksQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVkaXRvclN0YXRlIH0gZnJvbSAncHJvc2VtaXJyb3Itc3RhdGUnO1xuaW1wb3J0IHsgTWFyayB9IGZyb20gJ3Byb3NlbWlycm9yLW1vZGVsJztcblxuaW1wb3J0IGdldFNlbGVjdGlvbk1hcmtzIGZyb20gJy4vZ2V0U2VsZWN0aW9uTWFya3MnO1xuXG5leHBvcnQgY29uc3QgaXNMaW5rQWN0aXZlID0gKHN0YXRlOiBFZGl0b3JTdGF0ZSk6IGJvb2xlYW4gPT4ge1xuICBjb25zdCB7IHNjaGVtYSwgc2VsZWN0aW9uOiB7IGFuY2hvciwgaGVhZCwgZnJvbSwgdG8gfSB9ID0gc3RhdGU7XG5cbiAgaWYgKCFzY2hlbWEubWFya3MubGluaykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGNvbnN0IGlzRm9yd2FyZFNlbGVjdGlvbiA9IGFuY2hvciA9PT0gZnJvbTtcbiAgY29uc3QgbGlua01hcmtzOiBNYXJrW10gPSBnZXRTZWxlY3Rpb25NYXJrcyhzdGF0ZSkuZmlsdGVyKG1hcmsgPT4gbWFyay50eXBlID09PSBzY2hlbWEubWFya3MubGluayk7XG5cbiAgaWYgKCFsaW5rTWFya3MubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgY29uc3Qgc2VsZWN0aW9uSGFzT25seU1hcmtzID0gaXNGb3J3YXJkU2VsZWN0aW9uID9cbiAgICAoXG4gICAgICBzdGF0ZS5kb2MucmFuZ2VIYXNNYXJrKGFuY2hvciwgYW5jaG9yICsgMSwgc2NoZW1hLm1hcmtzLmxpbmspICYmXG4gICAgICBzdGF0ZS5kb2MucmFuZ2VIYXNNYXJrKGhlYWQgLSAxLCBoZWFkLCBzY2hlbWEubWFya3MubGluaylcbiAgICApIDogKFxuICAgICAgc3RhdGUuZG9jLnJhbmdlSGFzTWFyayhhbmNob3IgLSAxLCBhbmNob3IsIHNjaGVtYS5tYXJrcy5saW5rKSAmJlxuICAgICAgc3RhdGUuZG9jLnJhbmdlSGFzTWFyayhoZWFkLCBoZWFkICsgMSwgc2NoZW1hLm1hcmtzLmxpbmspXG4gICAgKTtcblxuICBpZiAobGlua01hcmtzLmxlbmd0aCA9PT0gMSAmJiBzZWxlY3Rpb25IYXNPbmx5TWFya3MpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGlzTGlua0FjdGl2ZTtcbiJdfQ==